repos:
  - repo: https://github.com/antonbabenko/pre-commit-terraform
    rev: v1.99.4
    hooks:
      - id: terraform_fmt
      - id: terraform_wrapper_module_for_each
      - id: terraform_docs
        args:
          - '--args=--lockfile=false'
      - id: terraform_tflint
        args:
          - '--args=--only=terraform_deprecated_interpolation'
          - '--args=--only=terraform_deprecated_index'
          - '--args=--only=terraform_unused_declarations'
          - '--args=--only=terraform_comment_syntax'
          - '--args=--only=terraform_documented_outputs'
          - '--args=--only=terraform_documented_variables'
          - '--args=--only=terraform_typed_variables'
          - '--args=--only=terraform_module_pinned_source'
          - '--args=--only=terraform_naming_convention'
          - '--args=--only=terraform_required_version'
          - '--args=--only=terraform_required_providers'
          - '--args=--only=terraform_standard_module_structure'
          - '--args=--only=terraform_workspace_remote'
      - id: terraform_validate
      - id: terraform_tfsec
        args:
          - '--args=--soft-fail'
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: check-merge-conflict
      - id: end-of-file-fixer
      - id: trailing-whitespace
      - id: check-yaml
  - repo: local
    hooks:
      - id: validate-opensearch-version
        name: Validate OpenSearch Engine Version
        entry: bash -c
        args:
          - |
            # Check for engine_version in Terraform files
            if grep -r "engine_version.*=" . --include="*.tf" | grep -v "null" | grep -v "variables.tf" | grep -v "#"; then
              echo "Found engine_version configurations:"
              grep -r "engine_version.*=" . --include="*.tf" | grep -v "null" | grep -v "variables.tf" | grep -v "#"
              echo ""
              echo "⚠️  VALIDATION: Please ensure engine_version follows format 'OpenSearch_X.Y'"
              echo "❌ BAD:  OpenSearch_2_19_R20250630-P5 (software service version)"
              echo "✅ GOOD: OpenSearch_2.19 (engine version)"
              echo ""
              # Extract and validate versions
              versions=$(grep -r "engine_version.*=" . --include="*.tf" | grep -v "null" | grep -v "variables.tf" | grep -v "#" | sed 's/.*engine_version.*=.*"\([^"]*\)".*/\1/' | sort | uniq)
              for version in $versions; do
                if [[ $version =~ ^OpenSearch_[0-9]{1,2}\.[0-9]{1,2}$ ]] || [[ $version =~ ^Elasticsearch_[0-9]{1}\.[0-9]{1,2}$ ]]; then
                  echo "✅ Valid version: $version"
                else
                  echo "❌ Invalid version: $version"
                  echo "   Must match pattern: OpenSearch_X.Y or Elasticsearch_X.Y"
                  exit 1
                fi
              done
            fi
        language: system
        pass_filenames: false
